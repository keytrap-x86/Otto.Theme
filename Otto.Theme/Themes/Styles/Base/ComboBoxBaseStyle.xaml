<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:kt="clr-namespace:Otto.Theme.Controls">



    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid x:Name="GridRoot" Cursor="Hand">
            <kt:NoGapBorder
                x:Name="Border"
                BorderThickness="1"
                CornerRadius="4"
                SnapsToDevicePixels="True"
                UseLayoutRounding="True">
                <kt:NoGapBorder.Background>
                    <SolidColorBrush x:Name="Background" Color="{DynamicResource ControlBackgroundColor}" />
                </kt:NoGapBorder.Background>
                <kt:NoGapBorder.BorderBrush>
                    <SolidColorBrush x:Name="BorderBrush" Color="{DynamicResource ControlBorderColor}" />
                </kt:NoGapBorder.BorderBrush>

                <ContentPresenter
                    Margin="10,0,10,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    Cursor="Hand"
                    TextElement.Foreground="{TemplateBinding Foreground}" />
            </kt:NoGapBorder>
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                Margin="10"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="{StaticResource ControlForegroundBrush}" />

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Color">
                                <EasingColorKeyFrame KeyTime="00:00:00.200" Value="{DynamicResource ControlBackgroundColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="BorderBrush" Storyboard.TargetProperty="Color">
                                <EasingColorKeyFrame KeyTime="00:00:00.200" Value="{DynamicResource ControlBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Color">
                                <EasingColorKeyFrame KeyTime="00:00:00.200" Value="{DynamicResource ControlHoveredBackgroundColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="BorderBrush" Storyboard.TargetProperty="Color">
                                <EasingColorKeyFrame KeyTime="00:00:00.200" Value="{DynamicResource ControlHoveredBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation
                                BeginTime="00:00:00.000"
                                Storyboard.TargetName="GridRoot"
                                Storyboard.TargetProperty="Opacity"
                                From="1"
                                To="0.5"
                                Duration="00:00:00.200" />
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Color">
                                <EasingColorKeyFrame KeyTime="00:00:00.200" Value="{DynamicResource ControlDisabledBackgroundColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="BorderBrush" Storyboard.TargetProperty="Color">
                                <EasingColorKeyFrame KeyTime="00:00:00.200" Value="{DynamicResource ControlDisabledBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ReadOnly">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Color">
                                <EasingColorKeyFrame KeyTime="00:00:00.200" Value="{DynamicResource ControlReadOnlyBackgroundColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="BorderBrush" Storyboard.TargetProperty="Color">
                                <EasingColorKeyFrame KeyTime="00:00:00.200" Value="{DynamicResource ControlReadOnlyBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <Storyboard>
                                <ThicknessAnimation
                                    FillBehavior="HoldEnd"
                                    Storyboard.TargetName="Border"
                                    Storyboard.TargetProperty="BorderThickness"
                                    From="1,1,1,1"
                                    To="2,2,2,2"
                                    Duration="00:00:0.400" />
                            </Storyboard>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard>
                            <ThicknessAnimation
                                FillBehavior="HoldEnd"
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="BorderThickness"
                                From="2,2,2,2"
                                To="1,1,1,1"
                                Duration="00:00:0.400" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>


    <Style x:Key="ComboBoxBaseStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Height="36">
                        <ToggleButton
                            Name="ToggleButton"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="10,0,10,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="10,0,25,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            Focusable="True"
                            Foreground="{StaticResource ControlForegroundBrush}"
                            IsHitTestVisible="False"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            SelectionBrush="{StaticResource ControlFocusedBorderBrush}"
                            Style="{x:Null}"
                            Visibility="Hidden">
                            <TextBox.Template>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border
                                        x:Name="PART_ContentHost"
                                        Background="{TemplateBinding Background}"
                                        Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">

                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource ControlBackgroundBrush}"
                                    BorderBrush="{StaticResource ControlBorderBrush}"
                                    BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        Name="Border"
                        Padding="8"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>